{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alert-popup/alert-popup.component.ts","./src/app/alert-popup/alert-popup.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/card.service.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/game-view/game-view.component.ts","./src/app/game-view/game-view.component.html","./src/app/lobby.service.ts","./src/app/main-menu/main-menu.component.ts","./src/app/main-menu/main-menu.component.html","./src/app/my-cards/my-cards.component.ts","./src/app/my-cards/my-cards.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/player-block/player-block.component.ts","./src/app/player-block/player-block.component.html","./src/app/playing-card/playing-card.component.ts","./src/app/playing-card/playing-card.component.html","./src/app/results-popup/results-popup.component.ts","./src/app/results-popup/results-popup.component.html","./src/app/room-code/room-code.component.ts","./src/app/socket.service.ts","./src/entity/Card.ts","./src/entity/data-structures/card-modes.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-alert-popup',\n  templateUrl: './alert-popup.component.html',\n  styleUrls: ['./alert-popup.component.css']\n})\nexport class AlertPopupComponent implements OnInit {\n  @ViewChild(\"alertTitle\", {read: ElementRef}) titleText: ElementRef;\n  @ViewChild(\"alertBody\", {read: ElementRef}) bodyText: ElementRef;\n\n  popupIsOpen : boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  open(alertTitle:string, alertMessage: string) : void {\n    close();\n    this.bodyText.nativeElement.textContent = alertMessage;\n    this.titleText.nativeElement.textContent = alertTitle;\n    this.popupIsOpen = true;\n  }\n  close() : void {\n    this.popupIsOpen = false;\n  }\n}\n","<div class=\"modal fade\" id=\"alertModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"alertModalTitle\" aria-hidden=\"true\" [ngStyle]=\"{'display': popupIsOpen ? 'block' : 'none', 'opacity': 1}\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"alertModalTitle\" #alertTitle></h5>\n        </div>\n        <div class=\"modal-body\">\n          <p #alertBody></p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"close()\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nexport let browserRefresh = false;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n  subscription: Subscription;\n\n  constructor(private router: Router) {\n    this.subscription = router.events.subscribe((event) => {\n        if (event instanceof NavigationStart) {\n          browserRefresh = !router.navigated;\n        }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameViewComponent } from './game-view/game-view.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PlayingCardComponent } from './playing-card/playing-card.component';\nimport { PlayerBlockComponent } from './player-block/player-block.component';\nimport { MyCardsComponent } from './my-cards/my-cards.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChatComponent } from './chat/chat.component';\nimport { ResultsPopupComponent } from './results-popup/results-popup.component';\nimport { AlertPopupComponent } from './alert-popup/alert-popup.component';\nimport { RoomCodeComponent } from './room-code/room-code.component'; \n\nconst appRoutes: Routes = [\n  { path: 'game', component: GameViewComponent },\n  { path: 'main', component: MainMenuComponent },\n  { path: '',   redirectTo: '/main', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameViewComponent,\n    MainMenuComponent,\n    PageNotFoundComponent,\n    PlayingCardComponent,\n    PlayerBlockComponent,\n    MyCardsComponent,\n    ChatComponent,\n    ResultsPopupComponent,\n    AlertPopupComponent,\n    RoomCodeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      //{ enableTracing: true } // <-- debugging purposes only, navigation events are logged\n    )\n  ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport Card from 'src/entity/Card';\nimport { SocketService } from './socket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CardService {\n  //hostName: String = 'http://localhost:3000';\n  //hostName = 'https://strawberry-sundae-17314.herokuapp.com';\n  hostName = 'http://www.qcards.us';\n\n  constructor(private http: HttpClient, private socketService: SocketService) { }\n\n  getCards(): Observable<Card[]> {\n    return this.http.get<Card[]>(`${this.hostName}/api/cards`);\n  }\n\n  getCard(cardNum): Observable<Card> {\n    return this.http.get<Card>(`${this.hostName}/api/cardByNum/` + cardNum);\n  }\n\n  getThreeCards(): Observable<Card[]> {\n    return this.http.get<Card[]>(`${this.hostName}/api/threeCards/${this.socketService.connectedRoom}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SocketService } from '../socket.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  chatOpened: boolean = false;\n  chatSubscription: Subscription;\n  chatMessages: string[] = [];\n  message: string;\n  \n\n  constructor( private socketService: SocketService ) { }\n\n  ngOnInit(): void {\n    console.log(this.socketService.socket.id);\n\n    this.chatSubscription = this.socketService.receiveChatMessage().subscribe( (msg) => {\n      console.log(this.chatMessages);\n      this.chatMessages.push(msg);\n    });\n  }\n\n  onSendChat(): void {\n    this.socketService.sendChatMessage(this.message);\n    this.message = '';\n  }\n\n  onToggleChat(state: boolean) {\n    this.chatOpened = state;\n  }\n\n  ngOnDestroy(): void {\n    if (this.chatSubscription) {\n      this.chatSubscription.unsubscribe();\n    }\n  }\n\n}\n","<button class=\"open-button tri-right btm-left\"\n  (click)=\"onToggleChat(true)\"\n  [ngStyle]=\"{ 'width' : chatOpened ? '3.5em' : '4.5em' }\"\n  [ngClass]=\"{ 'x' : chatOpened }\">{{ chatOpened ? 'X' : 'Chat' }}</button>\n\n<div class=\"chat-popup\" id=\"myForm\" [ngStyle]=\"{ 'display' : chatOpened ? 'block' : 'none' }\">\n  <form class=\"form-container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2>Chat</h2>\n      </div>\n      <div class=\"col text-right\">\n        <button type=\"button\" class=\"btn cancel\" (click)=\"onToggleChat(false)\">X</button>\n      </div>\n    </div>\n    <div class=\"row messages-container\">\n      <div class=\"col\">\n          <div class=\"chat-message\"\n            *ngFor=\"let msg of chatMessages; let i = index\"\n            [ngStyle]=\"{ 'background-color' :  i % 2 == 0 ? '#dbdbdb' : 'white'}\"> {{ msg }}\n          </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <textarea placeholder=\"Write something to your friends!\" [(ngModel)]=\"message\" name=\"msg\" rows=\"2\" required></textarea>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col text-right\">\n        <button type=\"submit\" class=\"btn\" (click)=\"onSendChat()\">Send</button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { Subscription } from 'rxjs';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Output } from '@angular/core';\n\nimport { browserRefresh } from '../app.component';\nimport { cardMode } from '../../entity/data-structures/card-modes';\nimport { ResultsPopupComponent } from '../results-popup/results-popup.component';\nimport { AlertPopupComponent } from '../alert-popup/alert-popup.component';\nimport Card from 'src/entity/Card';\nimport { CardService } from '../card.service';\n\n@Component({\n  selector: 'app-game-view',\n  templateUrl: './game-view.component.html',\n  styleUrls: ['./game-view.component.css']\n})\nexport class GameViewComponent implements OnInit {\n  browserRefresh: boolean;\n  @Output() currMode : cardMode;\n\n  @ViewChild(ResultsPopupComponent) resultsPopup: ResultsPopupComponent;\n  @ViewChild(AlertPopupComponent) alertPopup: AlertPopupComponent;\n  card1 : Card = new Card(null);\n  card2 : Card = new Card(null);\n  card3 : Card = new Card(null);\n\n  isTurn : boolean;\n  firstPlayer : boolean;\n  @Output() votingPhrase : string;\n\n  routingSubscription: Subscription;\n  //updates player when turns are tranferred in the game\n  isTurnSubscription: Subscription;\n  //updates the list of other players currently in the game\n  playerListSubscription: Subscription;\n  //signals to the player when a card is picked to vote on\n  cardPickedSubscription: Subscription;\n  //signals to the player when vote results are available after a round of voting\n  voteResultsSubscription: Subscription;\n  //signals to player when a round is cancelled because someone who was collecting votes leaves\n  roundIsCancelledSubscription: Subscription;\n\n  playerList: Array<any>;\n\n  constructor( private socketService: SocketService,\n    private cardService: CardService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    console.log(\"init game view\");\n    \n    this.browserRefresh = browserRefresh;\n    if (this.browserRefresh) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.initRoutingSubscription();\n    \n    //initialize turn boolean\n    this.isTurn = this.socketService.isTurnOnStart;\n    //initialize list of players\n    this.playerList = this.socketService.allOtherPlayersOnStart;\n    this.firstPlayer = this.isTurn && this.playerList.length == 0;\n\n    this.initCardMode();\n    this.initTurnSubscription();\n    this.initPlayerListSubscription();\n    this.initVoteResultsSubscription();\n    this.initRoundIsCancelledSubscription();\n  }\n\n  ngAfterViewInit(): void {\n    this.initCardPickedSubscription();\n    //welcome message\n    //TODO this throws an error, fix it\n    if(this.firstPlayer) {\n      //the \"setTimeout\" avoids the ExpressionChangedAfterChecked error I was getting\n      setTimeout(() => {\n        this.alertPopup.open(\"You look lonely...\", \"Send the game code at the top of the screen to your friends so they can join you!\");\n      });\n    }\n    else if (!this.isTurn){\n      setTimeout(() => {\n        this.alertPopup.open(\"Welcome Aboard\", \"Wait for your friend to pick a card, then vote for whoever you think the card best fits!\");\n      });\n    }\n  }\n  \n  initVoteResultsSubscription() : void {\n    //subscription returns an array with [overallResults including number votes each player got, \n    //                                    array of all winners (multiple in case of a tie),\n    //                                    the text of the card that was voted on]\n    this.voteResultsSubscription = this.socketService.getVoteResults().subscribe((results) => {\n      var overallResults = results[0];\n      var winners = results[1];\n      var cardText = results[2];\n\n      if(this.isTurn) {\n        this.resultsPopup.open(overallResults, winners, cardText);\n      }\n      else {\n        this.alertPopup.open(\"Voting done!\", \"Wait for this round's card reader to reveal the results with the group\");\n      }\n    });\n  }\n  initRoundIsCancelledSubscription() : void {\n    this.roundIsCancelledSubscription = this.socketService.getRoundIsCancelled().subscribe((isNewHost) => {\n      if(!isNewHost){\n        this.currMode = cardMode.waiting;\n      }\n      \n      this.alertPopup.open(\"Someone Left\", \"The numb nut who was supposed to collect the vote results left the game. Restarting the previous round.\");\n    });\n  }\n  initCardPickedSubscription() : void {\n    this.cardPickedSubscription = this.socketService.getPickedCard().subscribe((cardText) => {\n      \n      var roomEmpty = this.playerList.length == 0;\n      if(!roomEmpty) {\n        //wait for the other players to vote\n        if(this.currMode == cardMode.myTurn) { \n          this.currMode = cardMode.waiting;\n        }\n        //allow voters to vote since a card was picked, and display the card\n        else { \n          this.currMode = cardMode.voting;\n          this.votingPhrase = cardText;\n        }\n      }\n      else {\n        this.alertPopup.open(\"Empty room...\", \"You can't pick a card if there's no one to vote\");\n      }\n    });\n  }\n  initPlayerListSubscription() : void {\n    this.playerListSubscription = this.socketService.getOtherPlayerList().subscribe( (plist) => {\n      this.playerList = plist;\n      if(plist.length == 0) {\n        this.alertPopup.open(\"Empty room...\", \"Where did all your friends go?\");\n        this.currMode = cardMode.myTurn;\n      }\n    });\n  }\n\n  initTurnSubscription() : void {\n    this.isTurnSubscription = this.socketService.getIsTurn().subscribe( (isTurn) => {\n      this.isTurn = isTurn;\n      if(isTurn) {\n        this.cardService.getThreeCards().subscribe( cardArray => {\n          this.card1 = cardArray[0];\n          this.card2 = cardArray[1];\n          this.card3 = cardArray[2];\n          this.currMode = cardMode.myTurn;\n        }, err => {\n          console.log(err);\n        });\n      }\n      else {\n        this.currMode = cardMode.waiting;\n      }\n      \n    });\n  }\n  initRoutingSubscription() : void {\n    this.routingSubscription = this.router.events.subscribe( event => {\n      if (event instanceof NavigationStart ) {\n        this.socketService.disconnectSocket();\n      }\n    });\n  }\n  \n  initCardMode() : void {\n    //initially, get card mode and list of players other than current player\n    if(this.socketService.isTurnOnStart) {\n      this.cardService.getThreeCards().subscribe( cardArray => {\n        this.card1 = cardArray[0];\n        this.card2 = cardArray[1];\n        this.card3 = cardArray[2];\n        this.currMode = cardMode.myTurn;\n      }, err => {\n        console.log(err);\n      });\n    }\n    else {\n      this.currMode = cardMode.waiting;\n    }\n  }\n  \n  onVoted(): void {\n    this.currMode = cardMode.waiting;\n  }\n\n  getRoomCode(): string {\n    return this.socketService.connectedRoom;\n  }\n\n  ngOnDestroy(): void {\n    if(this.routingSubscription) {\n      this.routingSubscription.unsubscribe();\n    }\n    if(this.isTurnSubscription) {\n      this.isTurnSubscription.unsubscribe();\n    }\n    if(this.playerListSubscription) {\n      this.playerListSubscription.unsubscribe();\n    }\n    if(this.cardPickedSubscription) {\n      this.cardPickedSubscription.unsubscribe();\n    }\n    if(this.voteResultsSubscription) {\n      this.voteResultsSubscription.unsubscribe();\n    }\n    if(this.roundIsCancelledSubscription) {\n      this.roundIsCancelledSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"container\">\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <!-- <app-room-code [lobbyCode]=\"getRoomCode()\"></app-room-code> -->\n      <h2 id=\"room-code\">ROOM CODE: <span id=\"code\">{{ getRoomCode() }}</span></h2>\n    </div>\n  </div>\n\n  <div class=\"row player-space justify-content-between\">\n    <div class=\"col\">\n      <div class=\"card text-white player-block-container\">\n        <div *ngIf=\"playerList.length > 0; else noPlayers\" class=\"row\">\n          <app-player-block class=\"col-4\" *ngFor=\"let player of playerList;\" [player]=\"player\" [currMode]=\"currMode\"\n          [cardVotingOn] = \"votingPhrase\" (voted)=\"onVoted()\"></app-player-block>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #noPlayers>\n    <h5 id=\"no-players\">No other players :(</h5>\n  </ng-template>\n\n  <div class=\"row\" #cards>\n    <div class=\"col-4 card-col\">\n      <app-playing-card [currMode]=\"currMode\" [cardData]=\"card1\" [numPlayers]=\"playerList.length\"></app-playing-card>\n    </div>\n    <div class=\"col-4 card-col\">\n      <app-playing-card [currMode]=\"currMode\" [cardData]=\"card2\" [numPlayers]=\"playerList.length\"\n        [votingPhraseText]=\"votingPhrase\"></app-playing-card>\n    </div>\n    <div class=\"col-4 card-col\">\n      <app-playing-card [currMode]=\"currMode\" [cardData]=\"card3\" [numPlayers]=\"playerList.length\"></app-playing-card>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <div id=\"mycards\">\n        <app-my-cards></app-my-cards>\n      </div>\n    </div>\n  </div>\n\n  <!-- Pop up boxes -->\n  <div class=\"row\">\n    <div class=\"col\">\n      <app-results-popup #resultsPopup></app-results-popup>\n    </div>\n    <div class=\"col\">\n      <app-alert-popup #alertPopup></app-alert-popup>\n    </div>\n  </div>\n\n\n  <!-- <div class=\"row\">\n        <div class=\"col\">\n            <app-chat></app-chat>\n        </div>\n    </div> -->\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LobbyService {\n  //hostname: string = 'http://localhost:3000';\n  //hostname = 'https://strawberry-sundae-17314.herokuapp.com';\n  hostname = 'http://www.qcards.us';\n\n  constructor(private http : HttpClient) { }\n\n  checkRoom(lobbyCode: string) : Observable<any> {\n    return this.http.get(`${this.hostname}/api/checkRoom/${lobbyCode}`, {responseType: 'text'});\n  }\n\n  checkName(lobbyCode: string, username: string) : Observable<any> {\n    return this.http.get(`${this.hostname}/api/checkUser/${lobbyCode}/${username}`, {responseType: 'text'});\n  }\n}\n","import { Component, OnInit, ViewChild, ɵSWITCH_RENDERER2_FACTORY__POST_R3__ } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LobbyService } from '../lobby.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertPopupComponent } from '../alert-popup/alert-popup.component';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n  @ViewChild(AlertPopupComponent) alertPopup: AlertPopupComponent;\n\n  lobbyCode: string;\n  isConnectedSubscription: Subscription;\n  showNameField: boolean;\n  emptyName: boolean = false;\n  invalidName: boolean = false;\n  joiningGame: boolean;\n  invalidRoom: boolean;\n  name: string = '';\n\n  constructor( private socketService: SocketService,\n    private router: Router,\n    private lobbyService: LobbyService) { }\n\n  ngOnInit(): void {\n    this.showNameField = false;\n    this.joiningGame = false;\n    this.invalidRoom = false;\n    this.socketService.setUpSocket();\n  }\n\n  onStartGame() {\n    this.invalidRoom = false;\n    this.showNameField = true;\n  }\n\n  onGetGameInfo() {\n    var gameExplanation : string = \"Quarantine Cards is a virtual card game created by 2 Cal Poly studs in the hopes of entertaining and connecting our fellow college students. Here's how it works:\";\n    var step1 : string = \"1. Get all your friends in a game using your game's room code\";\n    var step2 : string = \"2. When it's your turn, you will have the option to pick 1 of 3 cards\";\n    var step3 : string = \"3. Your friends will vote for who they think the card best matches with\";\n    var step4 : string = \"4. If there is a tie, you will be in charge of breaking it!\";\n    var step5 : string = \"5. Play as many rounds as you like\"\n    var step5 : string = \"5. Tell more people about our game :->\"\n\n    var newLine : string = \"\\n\";\n    this.alertPopup.open(\"How To Play\", gameExplanation + \"\\n\\n\" + step1 + \"\\n\" + step2 + \"\\n\" + step3 + \"\\n\" +step4 + \"\\n\" + step5);\n  }\n\n  onJoinGame() {\n    console.log(this.lobbyCode);\n    this.lobbyService.checkRoom(this.lobbyCode).subscribe(res => {\n      this.joiningGame = true;\n      this.invalidRoom = false;\n      this.showNameField = true;\n    }, err => {\n      console.log(err);\n      if (err instanceof HttpErrorResponse) {\n        if (err.status == 401) {\n            this.invalidRoom = true;\n        }\n      }\n    });\n  }\n\n  onEnterName() {\n    // check empty names\n    console.log(this.name);\n    if (this.name === '') {\n      this.emptyName = true;\n      this.invalidName = false;\n      return;\n    }\n    else {\n      this.emptyName = false;\n    }\n    console.log('before');\n    this.lobbyService.checkName(this.lobbyCode, this.name).subscribe( res => {\n      console.log('yis');\n      this.onConnectGoToGame();\n      if (this.joiningGame) {\n        this.socketService.joinExistingRoom(this.lobbyCode, this.name);\n      }\n      else {\n        this.socketService.joinNewRoom(this.name);\n      }\n    }, err => {\n      console.log(err);\n      if (err instanceof HttpErrorResponse) {\n        if (err.status == 401) {\n          this.invalidName = true;\n        }\n      }\n    })\n  }\n\n  onConnectGoToGame(){\n    if(!this.isConnectedSubscription){\n      this.isConnectedSubscription = this.socketService.getIsConnected().subscribe( () => {\n        this.router.navigate(['/game']);\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isConnectedSubscription) {\n      this.isConnectedSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div class = \"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1>Quarantine Cards.</h1>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"!this.showNameField\">\n    <div class=\"col\">\n      <button type=\"button\" class=\"btn btn-lg btn-primary buttonPadding\" id=\"startGameButton\" (click)=\"onStartGame()\">Start a new game!</button>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"!this.showNameField\">\n    <div class=\"col\">\n      <h2 class=\"separator\">OR</h2>\n    </div>\n  </div>\n  <!-- ROOM CODE FIELD -->\n  <p id=\"noRoom\" *ngIf=\"invalidRoom\">Room not found!</p>\n  <div class=\"row\" *ngIf=\"!this.showNameField\">\n    <div class=\"col\">\n          <input type=\"text\" class=\"form-control-lg joinForm\" id=\"codeInput\" [(ngModel)]=\"lobbyCode\" placeholder=\"Room code\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"!this.showNameField\">\n    <div class=\"col-12\">\n      <button type=\"button\" class=\"btn btn-lg btn-info joinForm buttonPadding\" id=\"joinButton\" (click)=\"onJoinGame()\">Join your friend's game!</button>\n    </div>\n    <div class=\"col-12\">\n      <h2 class=\"separator\" style=\"white-space:nowrap; overflow:hidden;\">----------------</h2>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"button\" class=\"btn btn-lg btn-info buttonPadding\" id=\"infoButton\" (click)=\"onGetGameInfo()\">How to Play</button>\n    </div>\n  </div>\n\n  <!-- NAME FIELD -->\n  <div class=\"row\" *ngIf=\"this.showNameField\">\n    <div class=\"col\">\n    <h3>What is your name?</h3>\n    <h6 *ngIf=\"emptyName\" class=\"invalid\">Name cannot be empty!</h6>\n    <h6 *ngIf=\"invalidName\" class=\"invalid\">Looks like your friend is already using that name.</h6>\n    <h6 *ngIf=\"invalidName\" class=\"invalid\">Try adding some or all letters of your last name!</h6>\n      <input type=\"text\" class=\"form-control-lg joinForm\" id=\"nameInput\" [(ngModel)]=\"name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"this.showNameField\" id =\"infoButtonContainer\">\n    <div class=\"col\">\n      <button type=\"button\" class=\"btn btn-lg btn-success joinForm buttonPadding\" id=\"joinButton\" (click)=\"onEnterName()\">Enter game</button>\n    </div>\n  </div>\n\n  <!-- Pop up boxes -->\n  <div class=\"row\">\n    <div class=\"col\">\n      <app-alert-popup #alertPopup></app-alert-popup>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SocketService } from '../socket.service';\n\n\n@Component({\n  selector: 'app-my-cards',\n  templateUrl: './my-cards.component.html',\n  styleUrls: ['./my-cards.component.css']\n})\nexport class MyCardsComponent implements OnInit {\n  myCardsSubscription: Subscription;\n  myCards : Array<string>;\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit(): void { \n    this.initMyCardsSubscription();\n  }\n\n  initMyCardsSubscription() : void {\n    this.myCardsSubscription = this.socketService.getMyCards().subscribe((cards) => {\n      this.myCards = cards;  \n    });\n  }\n\n  ngOnDestroy(): void {\n    if(this.myCardsSubscription) {\n      this.myCardsSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"accordion\" id=\"myCards\">\n    <div class=\"card text-white bg-dark\">\n      <div class=\"card-header\" id=\"headingOne\">\n        <h2 class=\"mb-0\">\n          <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n           View My Cards\n          </button>\n        </h2>\n      </div>\n      \n      <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#myCards\">\n        <div class=\"card-body\">\n            <p class=\"text-dark\" *ngFor=\"let card of myCards;\">{{card}}</p>\n        </div>\n      </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page not found :( sorry bout that</p>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { cardMode } from '../../entity/data-structures/card-modes';\n\n@Component({\n  selector: 'app-player-block',\n  templateUrl: './player-block.component.html',\n  styleUrls: ['./player-block.component.css']\n})\nexport class PlayerBlockComponent implements OnInit {\n  @Input() player: any;\n  @Input() currMode: cardMode;\n  @Input() cardVotingOn: string;\n  @Output() voted = new EventEmitter();\n  @ViewChild(\"voteButton\", {read: ElementRef}) voteButton: ElementRef;\n\n  //used in the html file to determine if button is grayed out (disabled) or colored (enabled)\n  votingEnabled: boolean;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit() {\n    if(this.currMode == cardMode.voting) {\n      setTimeout(() => {\n        this.votingEnabled = true;\n      });\n      \n    }\n    else {\n      setTimeout(() => {\n        this.votingEnabled = false;\n      });\n    }\n  }\n  \n  ngOnChanges(changes : SimpleChanges): void{\n    if(changes.currMode && this.voteButton != null) {\n      if(this.currMode == cardMode.voting) {\n        this.votingEnabled = true;\n      }\n      else {\n        this.votingEnabled = false;\n      }\n    }\n  }\n\n  vote() : void {\n    if(this.votingEnabled) {\n      this.socketService.submitVote(this.player, this.cardVotingOn);\n\n      //after emitting the vote event, gameview will change currMode to waiting, and disable voting buttons\n      this.voted.emit(true);\n    }\n  }\n}\n","<div class=\"playerButton\">\n    <button type=\"button\" id=\"voteButton\"\n        [className]=\"votingEnabled ? 'btn btn-primary' : 'btn btn-light'\"\n        (click) = \"vote()\"\n        #voteButton>\n        <div id=\"name\">{{ player.name }}</div>\n        <div id=\"score\">{{ player.votes.length }}</div>\n    </button>\n</div>","import { Component, OnInit, SimpleChanges, SystemJsNgModuleLoader } from '@angular/core';\nimport { Input, ViewChild, ElementRef } from '@angular/core';\nimport { CardService } from '../card.service';\nimport { SocketService } from '../socket.service';\nimport Card from 'src/entity/Card';\nimport { cardMode } from '../../entity/data-structures/card-modes';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-playing-card',\n  templateUrl: './playing-card.component.html',\n  styleUrls: ['./playing-card.component.css']\n})\n\nexport class PlayingCardComponent implements OnInit {\n\n\n  @Input() currMode : cardMode;\n  @Input() votingPhraseText : string;\n  @Input() numPlayers : number;\n  @Input() cardData : Card;\n  @ViewChild(\"cardBackText\", {read: ElementRef}) cardText: ElementRef;\n  @ViewChild(\"cardFlipper\", {read: ElementRef}) card: ElementRef;\n  @ViewChild(\"choiceButton\", {read: ElementRef}) choiceButton: ElementRef;\n\n  cardFlipTime : number = 600;\n  testCard : Card;\n  backendCardSubscription: Subscription;\n\n  constructor(private cardService: CardService,\n              private socketService: SocketService) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit(): void {\n    //this is in ngAfterViewInit because the card ElementRef must first be loaded\n    // I think really only the second conditional is necessary, but the other \n    // conditionals guard against bad async behavior\n    if (this.currMode === undefined) {\n      this.cardText.nativeElement.textContent = \"Loading...\"\n    }\n    else if (this.currMode as cardMode !== cardMode.myTurn as cardMode) {\n      this.transitionToNewMode();\n    }\n    else {\n      this.cardText.nativeElement.textContent = this.cardData.card_text;\n    }\n  }\n\n  //when the mode changes (players turn to pick card or vote  ), notify the card so it can transition to the new mode\n  ngOnChanges(changes : SimpleChanges): void{\n    if(this.currMode !== undefined && changes.currMode) {\n      console.log(`new mode: ${this.currMode}`);\n      this.transitionToNewMode();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.backendCardSubscription) {\n      this.backendCardSubscription.unsubscribe();\n    }\n  }\n\n  //modify the text and flip the cards as necessary to enter the new mode\n  transitionToNewMode() : void {\n    console.log('transition');\n    if(this.card != null){\n      switch(this.currMode){\n        case cardMode.voting: {\n          this.cardText.nativeElement.textContent = \"\";\n          this.transitionCardToFace(\"front\");\n          if(this.votingPhraseText == null) {\n            this.cardText.nativeElement.textContent = \"vote above !\";\n          }\n          else {\n            this.cardText.nativeElement.textContent = this.votingPhraseText;\n          }\n          break;\n        }\n        case cardMode.waiting: {\n          this.cardText.nativeElement.textContent = \"\";\n          this.transitionCardToFace(\"front\");\n          this.cardText.nativeElement.textContent = \"waiting ...\";\n          break;\n        }\n        case cardMode.myTurn: {\n          this.cardText.nativeElement.textContent = \"\";\n          this.transitionCardToFace(\"back\");\n          this.cardText.nativeElement.textContent = this.cardData.card_text;\n          break;\n        }\n      }\n      this.disableCardChooseButton();\n    }\n  }\n\n  //disable the choice button to select a card when it is not a player's turn\n  disableCardChooseButton(){\n    let choiceButtonIsDisabled : Boolean = this.choiceButton.nativeElement.classList.contains('disabled');\n    if((this.currMode == cardMode.voting && !choiceButtonIsDisabled) ||\n       (this.currMode == cardMode.myTurn && choiceButtonIsDisabled) ||\n       (this.currMode == cardMode.waiting && !choiceButtonIsDisabled))\n    {\n      this.choiceButton.nativeElement.classList.toggle('disabled');\n    }\n  }\n\n  //flip a card over to the desired face side\n  transitionCardToFace(face : String) : void {\n    let cardIsOnFace : Boolean = this.card.nativeElement.classList.contains('flip');\n    \n    //switch statement on which card face we would like to end up at after some fancy flipping\n    switch(face){\n      case(\"front\"): {\n        console.log('to front');\n        if(cardIsOnFace) {\n          setTimeout(() => this.card.nativeElement.classList.toggle('flip'), this.cardFlipTime);\n          this.card.nativeElement.classList.toggle('flip');\n        }\n        else { this.card.nativeElement.classList.toggle('flip'); }\n        break;\n      }\n      // NOTE: setTimeout is an asynchronous function, so toggling nativeElement outside of\n      // a setTimeout will always execute faster regardless of position in code\n      case(\"back\"): {\n        console.log('to back');\n        if(cardIsOnFace) {\n          this.card.nativeElement.classList.toggle('flip');\n        }\n        break;\n      }\n    }\n  }\n\n  onCardClick(card : HTMLElement) : void{\n    if(this.currMode == cardMode.myTurn){\n      card.classList.toggle('flip');\n    }\n  }\n\n  onCardPicked() : void {\n    if (this.numPlayers > 0) {\n      //console.log(\"card picked: \" + this.cardText.nativeElement.textContent);\n      this.socketService.pickCard(this.cardData);\n    }\n    else {\n      // The alert popup is in the parent component, and there's no easy way to trigger\n      // it from this component. Thus to prevent someone from picking a card when there's only\n      // one person in the lobby, we just pass this function null.\n      // The null is handled in the backend to not do any meaningful work, and when that\n      // gets back to the frontend and parent component through the socket service,\n      // it can still trigger the alert popup.\n      this.socketService.pickCard(null);\n    }\n  }\n\n}\n","<div class=\"flip-container w-100 h-100\"  #cardFlipper (click) = onCardClick(cardFlipper)>\n\t<div class=\"flipper\">\n\t\t<div class=\"front\">\n\t\t\t<p>Flip me !</p>\n\t\t</div>\n\t\t<div class=\"back\">\n\t\t\t<p #cardBackText>Back text</p>\n\t\t\t<button class=\"choiceButton btn btn-primary\" #choiceButton (click) = \"onCardPicked()\">Pick me!</button>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SocketService } from '../socket.service';\n\n@Component({\n  selector: 'app-results-popup',\n  templateUrl: './results-popup.component.html',\n  styleUrls: ['./results-popup.component.css']\n})\nexport class ResultsPopupComponent implements OnInit {\n  @ViewChild(\"resultsText\", {read: ElementRef}) resultsText: ElementRef;\n\n  popupIsOpen : boolean;\n  voteWinner : any;\n  cardToSend : string;\n  tiedWinners : Array<any>;\n  isAtie : boolean;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit(): void {\n    this.isAtie = false;\n    this.tiedWinners = [];\n    this.popupIsOpen = false;\n  }\n\n  //TODO handle ties\n  parseVoteResults(voteResults: Array<any>, winner : any) : string {\n    var parsedResults = \"\";\n    var reachedArrElements = [];\n\n    //sort the names so results display consistantely \n    voteResults.sort((a, b) => (a.name > b.name) ? 1 : -1)\n\n    voteResults.forEach(function (player) {\n      if(!reachedArrElements.includes(player.name)){\n        var numVotes = voteResults.filter((value) => value.name == player.name).length;\n        parsedResults += (player.name + \" got \" + numVotes + \" votes! \\n\");\n\n        reachedArrElements.push(player.name);\n      }\n    });\n    \n    \n    parsedResults += (\"\\n\" + winner.name + \" wins the card.\");\n    parsedResults += (\"\\n\\nReveal the results to the other players!\");\n    return parsedResults;\n  }\n  open(voteResults: Array<any>, winners: Array<any>, cardText: string) : void {\n    this.popupIsOpen = true;\n    this.cardToSend = cardText;\n\n    if(winners.length == 1) {\n      this.resultsText.nativeElement.textContent = this.parseVoteResults(voteResults, winners[0]);\n      this.voteWinner = winners[0];\n      this.isAtie = false;\n    }\n    else {\n      this.tiedWinners = winners;\n      this.isAtie = true;\n      this.resultsText.nativeElement.textContent = \"Looks like we got ouselves a good old Mexican standoff (there was a tie). Break the tie!\";\n    }\n  }\n\n  breakTie(selectedPlayer) : void {\n    this.voteWinner = selectedPlayer;\n    this.close();\n  }\n\n  close() : void {\n    this.popupIsOpen = false;\n    this.socketService.sendVoteResultsToOtherPlayers(this.voteWinner, this.cardToSend);\n    this.socketService.giveUpTurn();\n  }\n}\n","<div class=\"modal fade\" id=\"resultsModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"resultsModalTitle\" aria-hidden=\"true\" [ngStyle]=\"{'display': popupIsOpen ? 'block' : 'none', 'opacity': 1}\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"resultsModalTitle\">Vote Results</h5>\n        </div>\n        <div class=\"modal-body\">\n          <p #resultsText></p>\n        </div>\n        <div class=\"modal-footer\">\n          <button *ngIf=\"!isAtie\" type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"close()\">End Turn</button>\n          <div class = \"row\" *ngIf=\"isAtie\">\n            <div class=\"col-6 tie-break-col\" *ngFor=\"let player of tiedWinners;\">\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"breakTie(player)\">{{player.name}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-room-code',\n  templateUrl: './room-code.component.html',\n  styleUrls: ['./room-code.component.css']\n})\nexport class RoomCodeComponent implements OnInit {\n\n  @Input() lobbyCode: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport Card from 'src/entity/Card';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  socket: any = null;\n  connectedRoom: string = '';\n  isTurnOnStart: boolean = null;\n  allOtherPlayersOnStart: Array<any> = [];\n\n  constructor() { }\n\n  //get list of all players excluding this current one\n  getAllOtherPlayersList(allPlayers: Array<any>): Array<any>{\n    console.log(\"all players: \" + allPlayers);\n    var output: Array<any> = [];\n    allPlayers.forEach((player) =>{\n      if(player.Id != this.socket.id){\n        output.push(player);\n      }\n    });\n    console.log(\"all other players: \" + output);\n    return output;\n  }\n\n  setUpSocket() {\n    if (this.socket) {\n      return;\n    }\n    //var hostname = 'http://localhost:3000';\n    //var hostname = 'https://strawberry-sundae-17314.herokuapp.com';\n    //var hostname = 'http://localhost:5000';\n    var hostname = 'http://www.qcards.us';\n\n    this.socket = io(hostname);\n  }\n\n  getIsConnected() : Observable<boolean>{\n\n    //this.socket.emit('clientGetIsTurn', this.connectedRoom);\n    let observable = new Observable<boolean>( observer => {\n      this.socket.on('connected', (code, turn, playerList) => {\n        this.connectedRoom = code;\n        this.isTurnOnStart = turn;\n        this.allOtherPlayersOnStart = this.getAllOtherPlayersList(playerList);\n        console.log(\"is connected to \" + code + \", and is turn? \" + turn + \", \" + playerList);\n        observer.next();\n      });\n    });\n\n    return observable;\n  }\n\n  disconnectSocket() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n    this.socket = null;\n    this.connectedRoom = '';\n    this.isTurnOnStart = null;\n    this.allOtherPlayersOnStart = null;\n  }\n\n  joinNewRoom(name: String): void {\n    if (this.connectedRoom !== '') {\n      console.log(\"Cannot connect to new lobby while in another lobby\");\n    }\n    else {\n      this.socket.emit('newLobby', name);\n    }    \n  }\n\n  joinExistingRoom(desiredRoom: String, name: String) {\n    if (this.connectedRoom !== '') {\n      console.log(\"Cannot connect to new lobby while in another lobby\");\n    }\n    else {\n      this.socket.emit('joinLobby', desiredRoom, name);\n    }\n  }\n\n  sendChatMessage(message: string) {\n    this.socket.emit('clientSendChat', this.connectedRoom, message);\n  }\n\n  receiveChatMessage() {\n    let observable = new Observable<string>( observer => {\n      this.socket.on('serverSendChat', (msg) => {\n        console.log(msg);\n        observer.next(msg);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  giveUpTurn(){\n    this.socket.emit('clientGivingUpTurn', this.connectedRoom);\n  }\n\n  getIsTurn() : Observable<boolean>{\n    let observable = new Observable<boolean>( observer => {\n      this.socket.on('serverSendIsTurn', (isTurn) => {\n        observer.next(isTurn);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  //a round is cancelled if it is someone's turn to pick a card and collect votes, but they disconnect\n  getRoundIsCancelled() : Observable<boolean> {\n    let observable = new Observable<boolean>( observer => {\n      this.socket.on('roundCancelled', (idNextRoundHost) => {\n        var isNewHost : boolean;\n        isNewHost = false;\n        if(this.socket.id == idNextRoundHost){\n          isNewHost = true;\n        }\n        observer.next(isNewHost);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  //signal to the server that a card was picked\n  pickCard(card : Card) : void {\n    this.socket.emit('clientPickedCard', this.connectedRoom, card);\n  }\n\n  //wait for the card picked by player with the turn\n  getPickedCard() : Observable<string>{\n    let observable = new Observable<string>( observer => {\n      this.socket.on('serverSendCardPicked', (cardObject) => {\n        if (cardObject) {\n          observer.next(cardObject.card_text);\n        }\n        else {\n          observer.next(null);\n        }\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  //wait for the voting results for the round\n  getVoteResults() : Observable<Array<any>>{\n    let observable = new Observable<Array<any>>( observer => {\n      this.socket.on('serverSendVoteResults', (results, winners, cardVotingOn) => {\n\n        observer.next([results, winners, cardVotingOn]);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  getMyCards() : Observable<Array<any>>{\n    let observable = new Observable<Array<any>>( observer => {\n      this.socket.on('serverSendUpdatedCards', (cards) => {\n\n        observer.next(cards);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n  revealVoteResults(results : Array<any>) : void {\n    this.socket.emit('revealVoteResults', this.connectedRoom, results);\n  }\n\n  submitVote(playerVotedFor, cardVotingOn : String) : void{\n    this.socket.emit('clientSendVote', this.connectedRoom, playerVotedFor, cardVotingOn, this.socket.id);\n  }\n\n  sendVoteResultsToOtherPlayers(voteWinner, cardVotingOn){\n    this.socket.emit('clientEndingTurn', this.connectedRoom, voteWinner, cardVotingOn);\n  }\n\n  //get the list of all players excluding current player\n  getOtherPlayerList() : Observable<Array<any>>{\n    let observable = new Observable<Array<any>>( observer => {\n      this.socket.on('serverUpdatePlayerList', (msg) => {\n        var output: Array<any> = this.getAllOtherPlayersList(msg);\n        observer.next(output);\n      });\n      return () => {\n        this.disconnectSocket();\n      };\n    });\n\n    return observable;\n  }\n\n}\n","export default class Card {\r\n    _id?: string;\r\n    card_text: string;\r\n    card_num: number;\r\n\r\n    constructor(json: any) {\r\n        if (json) {\r\n            this._id = json._id;\r\n            this.card_text = json.card_text;\r\n            this.card_num = json.card_num;\r\n            \r\n        }\r\n        else {\r\n            this._id = '';\r\n            this.card_text = '';\r\n            this.card_num = -1;\r\n        }\r\n    }\r\n}","export enum cardMode {myTurn, voting, waiting};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}